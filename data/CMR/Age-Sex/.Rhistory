#Load packages
library(tictoc)
library(raster)
devtools::install_github('wpgp/peanutButter')
library(peanutButter)
#Specify Drive Path
drive_path <- "/Volumes/worldpop/Projects/WP000008_UNFPA_THA_Phase2/Working/Pop_Modelling_Training_Manual/Resources/Ortis/Age-Sex/"
input_path <- paste0(drive_path, "Data/")
output_path <- paste0(drive_path, "Output/")
# settings
country <- 'CMR'
version <- 'v1_0'
woprname <- paste0(country,'_population_',version,'_')
population <- raster(paste0(input_path, "pop_hat_total.tif"))
#Age-sex disaggregation function
woprAgesexRasters <- function(country, version, outdir, population, regions, proportions){
dir.create(outdir, recursive=T, showWarnings=F)
woprname <- paste0(country,'_population_',version,'_agesex_')
# demographic rasters
groups <- c(paste0('f',c(0,1,seq(5,80,5))),paste0('m',c(0,1,seq(5,80,5))))
for(group in groups){
cat(paste0(group,'\n'))
outfile <- file.path(outdir,paste0(woprname,group,'.tif'))
if(!file.exists(outfile)){
raster::writeRaster(x = peanutButter::demographic(population = population,
group_select = group,
regions = regions,
proportions = proportions),
filename = outfile,
overwrite = T)
}
}
# under 1
cat('U1 \n')
agesex_stack <- raster::stack(file.path(outdir,
paste0(woprname,c('m0','f0'),'.tif')))
result <- raster::stackApply(agesex_stack,  raster::nlayers(agesex_stack), fun = sum)
result[is.na(population)] <- NA
raster::writeRaster(result,
file.path(outdir,paste0(woprname,'under1.tif')),
overwrite = TRUE)
rm(agesex_stack, result);gc()
# under 5
cat('U5 \n')
agesex_stack <- raster::stack(file.path(outdir,
paste0(woprname,c('m0','f0','m1','f1'),'.tif')))
result <- raster::stackApply(agesex_stack,  raster::nlayers(agesex_stack), fun = sum)
result[is.na(population)] <- NA
raster::writeRaster(result,
file.path(outdir,paste0(woprname,'under5.tif')),
overwrite = TRUE)
rm(agesex_stack, result);gc()
# under 15
cat('U15 \n')
agesex_stack <- raster::stack(file.path(outdir,
paste0(woprname,c('m0','f0','m1','f1','m5','f5','m10','f10'),'.tif')))
result <- raster::stackApply(agesex_stack,  raster::nlayers(agesex_stack), fun = sum)
result[is.na(population)] <- NA
raster::writeRaster(result,
file.path(outdir,paste0(woprname,'under15.tif')),
overwrite = TRUE)
rm(agesex_stack, result);gc()
# females 15-49
cat('F15-49 \n')
agesex_stack <- raster::stack(file.path(outdir,
paste0(woprname,paste0('f',seq(15,45,5)),'.tif')))
result <- raster::stackApply(agesex_stack,  raster::nlayers(agesex_stack), fun = sum)
result[is.na(population)] <- NA
raster::writeRaster(result,
file.path(outdir,paste0(woprname,'f15_49.tif')),
overwrite = TRUE)
rm(agesex_stack, result);gc()
}
names(proportions)[1] <- 'id'
proportions
names(proportions)[1]
# format proportions
names(proportions)[1] <- 'id'
proportions
proportions <- read.csv(paste0(input_path, "CMR_2020_agesex.csv"), stringsAsFactors=F)
population
dept <- raster(paste0(input_path, "CMR_Department.tif"))
#Load packages
library(tictoc)
library(raster)
#devtools::install_github('wpgp/peanutButter')
library(peanutButter)
#Specify Drive Path
drive_path <- "/Volumes/projects/WP000008_UNFPA_THA_Phase2/Working/Pop_Modelling_Training_Manual/resources/Ortis/Age-Sex"
input_path <- paste0(drive_path, "Data/")
output_path <- paste0(drive_path, "Output/")
# settings
country <- 'CMR'
version <- 'v1_0'
woprname <- paste0(country,'_population_',version,'_')
population <- raster(paste0(input_path, "pop_hat_total.tif"))
input_path
population <- raster(paste0("/Volumes/projects/WP000008_UNFPA_THA_Phase2/Working/Pop_Modelling_Training_Manual/resources/Ortis/Age-Sex", "pop_hat_total.tif"))
population <- raster(paste0("/Volumes/projects/WP000008_UNFPA_THA_Phase2/Working/Pop_Modelling_Training_Manual/resources/Ortis/Age-Sex", "pop_hat_total.tif"))
knitr::opts_chunk$set(echo = TRUE)
#working directory for macOS
setwd("/Volumes/worldpop/Projects/WP000008_UNFPA_THA_Phase2/Working/Pop_Modelling_Training_Manual/Module11")
knitr::opts_chunk$set(echo = TRUE)
#working directory for macOS
setwd("/Volumes/worldpop/Projects/WP000008_UNFPA_THA_Phase2/Working/Pop_Modelling_Training_Manual/Module11")
knitr::opts_chunk$set(echo = TRUE)
#working directory for macOS
setwd("/Volumes/worldpop/Projects/WP000008_UNFPA_THA_Phase2/Working/Pop_Modelling_Training_Manual/Module11")
install.packages("tictoc")
install.packages("tictoc")
stop()
#Load packages
library(tictoc)
library(raster)
#devtools::install_github('wpgp/peanutButter')
library(peanutButter)
#Specify Drive Path
drive_path <- "/Users/laynacharliedennett/Desktop/Age-Sex/"
input_path <- paste0(drive_path, "Data/")
output_path <- paste0(drive_path, "Output/")
# settings
country <- 'CMR'
version <- 'v1_0'
woprname <- paste0(country,'_population_',version,'_')
population <- raster(paste0(input_path, "pop_hat_total.tif"))
dept <- raster(paste0(input_path, "CMR_Department.tif"))
proportions <- read.csv(paste0(input_path, "CMR_2020_agesex.csv"), stringsAsFactors=F)
plot(dept)
#Age-sex disaggregation function
woprAgesexRasters <- function(country, version, outdir, population, regions, proportions){
dir.create(outdir, recursive=T, showWarnings=F)
woprname <- paste0(country,'_population_',version,'_agesex_')
# demographic rasters
groups <- c(paste0('f',c(0,1,seq(5,80,5))),paste0('m',c(0,1,seq(5,80,5))))
for(group in groups){
cat(paste0(group,'\n'))
outfile <- file.path(outdir,paste0(woprname,group,'.tif'))
if(!file.exists(outfile)){
raster::writeRaster(x = peanutButter::demographic(population = population,
group_select = group,
regions = regions,
proportions = proportions),
filename = outfile,
overwrite = T)
}
}
# under 1
cat('U1 \n')
agesex_stack <- raster::stack(file.path(outdir,
paste0(woprname,c('m0','f0'),'.tif')))
result <- raster::stackApply(agesex_stack,  raster::nlayers(agesex_stack), fun = sum)
result[is.na(population)] <- NA
raster::writeRaster(result,
file.path(outdir,paste0(woprname,'under1.tif')),
overwrite = TRUE)
rm(agesex_stack, result);gc()
# under 5
cat('U5 \n')
agesex_stack <- raster::stack(file.path(outdir,
paste0(woprname,c('m0','f0','m1','f1'),'.tif')))
result <- raster::stackApply(agesex_stack,  raster::nlayers(agesex_stack), fun = sum)
result[is.na(population)] <- NA
raster::writeRaster(result,
file.path(outdir,paste0(woprname,'under5.tif')),
overwrite = TRUE)
rm(agesex_stack, result);gc()
# under 15
cat('U15 \n')
agesex_stack <- raster::stack(file.path(outdir,
paste0(woprname,c('m0','f0','m1','f1','m5','f5','m10','f10'),'.tif')))
result <- raster::stackApply(agesex_stack,  raster::nlayers(agesex_stack), fun = sum)
result[is.na(population)] <- NA
raster::writeRaster(result,
file.path(outdir,paste0(woprname,'under15.tif')),
overwrite = TRUE)
rm(agesex_stack, result);gc()
# females 15-49
cat('F15-49 \n')
agesex_stack <- raster::stack(file.path(outdir,
paste0(woprname,paste0('f',seq(15,45,5)),'.tif')))
result <- raster::stackApply(agesex_stack,  raster::nlayers(agesex_stack), fun = sum)
result[is.na(population)] <- NA
raster::writeRaster(result,
file.path(outdir,paste0(woprname,'f15_49.tif')),
overwrite = TRUE)
rm(agesex_stack, result);gc()
}
knitr::opts_chunk$set(echo = TRUE)
#working directory for macOS
#setwd("/Volumes/worldpop/Projects/WP000008_UNFPA_THA_Phase2/Working/Pop_Modelling_Training_Manual/Module11")
#data path for macOS
#data_path <- "/Volumes/worldpop/Projects/WP000008_UNFPA_THA_Phase2/Working/Pop_Modelling_Training_Manual/data/"
#working directory for windows
setwd("/Projects/WP000008_UNFPA_THA_Phase2/Working/Pop_Modelling_Training_Manual/Module11")
output_path <- paste0(drive_path, "Output/")
population <- raster(paste0(drive_path, "pop_hat_total.tif"))
dept <- raster(paste0(drive_path, "CMR_Department.tif"))
setwd("/Volumes/projects/WP000008_UNFPA_THA_Phase2/Working/Pop_Modelling_Training_Manual/data/CMR/Age-Sex")
drive_path <- paste0("smb://worldpop.files.soton.ac.uk/worldpop/projects/WP000008_UNFPA_THA_Phase2/Working/Pop_Modelling_Training_Manual/data/CMR/Age-Sex/")
output_path <- paste0(drive_path, "Output/")
population <- raster(paste0(drive_path, "pop_hat_total.tif"))
drive_path <- paste0("projects/WP000008_UNFPA_THA_Phase2/Working/Pop_Modelling_Training_Manual/data/CMR/Age-Sex/")
output_path <- paste0(drive_path, "Output/")
population <- raster(paste0(drive_path, "pop_hat_total.tif"))
population <- raster(paste0(input_path, "pop_hat_total.tif"))
dept <- raster(paste0(input_path, "CMR_Department.tif"))
proportions <- read.csv(paste0(input_path, "CMR_2020_agesex.csv"), stringsAsFactors=F)
plot(dept)
#Age-sex disaggregation function
woprAgesexRasters <- function(country, version, outdir, population, regions, proportions){
dir.create(outdir, recursive=T, showWarnings=F)
woprname <- paste0(country,'_population_',version,'_agesex_')
# demographic rasters
groups <- c(paste0('f',c(0,1,seq(5,80,5))),paste0('m',c(0,1,seq(5,80,5))))
for(group in groups){
cat(paste0(group,'\n'))
outfile <- file.path(outdir,paste0(woprname,group,'.tif'))
if(!file.exists(outfile)){
raster::writeRaster(x = peanutButter::demographic(population = population,
group_select = group,
regions = regions,
proportions = proportions),
filename = outfile,
overwrite = T)
}
}
# under 1
cat('U1 \n')
agesex_stack <- raster::stack(file.path(outdir,
paste0(woprname,c('m0','f0'),'.tif')))
result <- raster::stackApply(agesex_stack,  raster::nlayers(agesex_stack), fun = sum)
result[is.na(population)] <- NA
raster::writeRaster(result,
file.path(outdir,paste0(woprname,'under1.tif')),
overwrite = TRUE)
rm(agesex_stack, result);gc()
# under 5
cat('U5 \n')
agesex_stack <- raster::stack(file.path(outdir,
paste0(woprname,c('m0','f0','m1','f1'),'.tif')))
result <- raster::stackApply(agesex_stack,  raster::nlayers(agesex_stack), fun = sum)
result[is.na(population)] <- NA
raster::writeRaster(result,
file.path(outdir,paste0(woprname,'under5.tif')),
overwrite = TRUE)
rm(agesex_stack, result);gc()
# under 15
cat('U15 \n')
agesex_stack <- raster::stack(file.path(outdir,
paste0(woprname,c('m0','f0','m1','f1','m5','f5','m10','f10'),'.tif')))
result <- raster::stackApply(agesex_stack,  raster::nlayers(agesex_stack), fun = sum)
result[is.na(population)] <- NA
raster::writeRaster(result,
file.path(outdir,paste0(woprname,'under15.tif')),
overwrite = TRUE)
rm(agesex_stack, result);gc()
# females 15-49
cat('F15-49 \n')
agesex_stack <- raster::stack(file.path(outdir,
paste0(woprname,paste0('f',seq(15,45,5)),'.tif')))
result <- raster::stackApply(agesex_stack,  raster::nlayers(agesex_stack), fun = sum)
result[is.na(population)] <- NA
raster::writeRaster(result,
file.path(outdir,paste0(woprname,'f15_49.tif')),
overwrite = TRUE)
rm(agesex_stack, result);gc()
}
demographic <- function(population, group_select, regions, proportions){
# format proportions
names(proportions)[1] <- 'id'
row.names(proportions) <- proportions$id
# sum proportions
if(length(group_select)==1){
proportions$prop <- proportions[,group_select]
} else {
proportions$prop <- apply(proportions[,group_select], 1, sum, na.rm=T)
}
# reduce cols
proportions <- proportions[,c(1,ncol(proportions))]
# save raster coordinate system
crs1 <- raster::crs(regions)
ex1 <- raster::xmin(regions)
ex2 <- raster::xmax(regions)
ex3 <- raster::ymin(regions)
ex4 <- raster::ymax(regions)
# raster to matrix
regions <- raster::as.matrix(regions)
# proportions to matrix
group_proportion <- regions
group_proportion[] <- NA
for(id in proportions$id){
group_proportion[which(regions==id)] <- proportions[as.character(id), 'prop']
}
# rasterize group proportions
group_proportion <- raster::raster(group_proportion, crs=crs1, xmn=ex1, xmx=ex2, ymn=ex3, ymx=ex4)
# calculate age-sex population
group_population <- population * group_proportion
return(group_population)
}
# format proportions
names(proportions)[1] <- 'id'
names(proportions)[1]
names(proportions)
row.names(proportions)
proportions$id
dir.create(drive_path, recursive=T, showWarnings=F)
woprname <- paste0(country,'_population_',version,'_agesex_')
groups <- c(paste0('f',c(0,1,seq(5,80,5))),paste0('m',c(0,1,seq(5,80,5))))
groups
group = 1
cat(paste0(group,'\n'))
outfile <- file.path(outdir,paste0(woprname,group,'.tif'))
outfile
outdir=drive_path
outfile <- file.path(outdir,paste0(woprname,group,'.tif'))
if(!file.exists(outfile)){
raster::writeRaster(x = peanutButter::demographic(population = population,
group_select = group,
regions = regions,
proportions = proportions),
filename = outfile,
overwrite = T)
}
group <- groups[1]
outfile <- file.path(outdir,paste0(woprname,group,'.tif'))
if(!file.exists(outfile)){
raster::writeRaster(x = peanutButter::demographic(population = population,
group_select = group,
regions = regions,
proportions = proportions),
filename = outfile,
overwrite = T)
}
demographic(population = population,
group_select = group,
regions = regions,
proportions = proportions)
demographic(population = population,
group_select = group,
regions = dept,
proportions = proportions)
group_select = group
length(group_select)
proportions$prop <- proportions[,group_select]
proportions$prop
proportions
proportions[,group_select]
proportions[,c(1,ncol(proportions))]
# reduce cols
proportions <- proportions[,c(1,ncol(proportions))]
# save raster coordinate system
crs1 <- raster::crs(regions)
regions <- dept
# save raster coordinate system
crs1 <- raster::crs(regions)
ex1 <- raster::xmin(regions)
ex2 <- raster::xmax(regions)
ex3 <- raster::ymin(regions)
ex4 <- raster::ymax(regions)
# raster to matrix
regions <- raster::as.matrix(regions)
regions
# proportions to matrix
group_proportion <- regions
group_proportion
group_proportion[] <- NA
group_proportion
group_proportion[]
group_proportion[] <- NA
group_proportion[]
id <- proportions$id[1]
id
proportions[as.character(id), 'prop']
which(regions==id)
regions
group_proportion[which(regions==id)]
for(id in proportions$id){
group_proportion[which(regions==id)] <- proportions[as.character(id), 'prop']
}
group_proportion
# rasterize group proportions
group_proportion <- raster::raster(group_proportion, crs=crs1, xmn=ex1, xmx=ex2, ymn=ex3, ymx=ex4)
group_proportion
population * group_proportion
population
