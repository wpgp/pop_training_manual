tm_lines(size = 0.5)+
tm_basemap('OpenStreetMap')+
tm_shape(states)+
tm_borders(lwd=1)
#import the population dataset
pop_estimate <- read.csv(paste0(drive_path, "Population.csv"))
#view the population size estimates
View(pop_estimate)
#join the states vector data and the population estimates tabular data together
pop_states <- states %>%
inner_join(pop_estimate, by = "statename")
drive_path
#import the population dataset
pop_estimate <- read.csv(paste0(drive_path, "Population.csv"))
#view the population size estimates
view(pop_estimate)
#view the attributes of the states vector data
View(states)
#view the population size estimates
view(pop_estimate)
#set tmap mode back to plot for static plots
tmap_mode("plot")
#visualize population distribution by state
tm_shape(pop_states)+
tm_polygons(col='Total', lwd=5)+
tm_shape(states)+
tm_borders()+
tm_basemap('OpenStreetMap')
drive_path <- "/Users/laynacharliedennett/Desktop/worldpop/Module3/Data/"
#load the sf package
library(sf)
#read in the vector data
health_facilities <- st_read(paste0(
drive_path, "GRID3_Nigeria_-_Health_Care_Facilities.shp"))
road_network <- st_read(paste0(drive_path, "nga_rds_1m_dcw.shp"))
states <- st_read(paste0(drive_path, "Admin2_states.shp"))
country <- st_read(paste0(drive_path, "nga_polbnda_adm0_1m.shp"))
#load the raster package
library(raster)
#read in the raster data
pop_raster <- raster(paste0(drive_path, "NGA_population_v1_2_gridded.tif"))
library(terra)
library(tmap)
library(leaflet)
library(mapview)
library(units)
library(exactextractr)
library(tidyverse)
tmap_options(check.and.fix = TRUE) #fix potential issues during the processing
plot(states)
#plot just the shape area attribute
plot(states['region'], main = "region",
pal = rev(heat.colors(10)))
plot(pop_raster)
st_geometry(states) %>% plot()
plot(st_geometry(states))
plot(st_geometry(country))
plot(st_geometry(states), add = TRUE,
pch = 16, col = "#004C92", cex = 0.5)
plot(pop_raster)
plot(st_geometry(states), add = TRUE,
pch = 16, cex = 0.5)
#plot the country shapefile
tm_shape(country) +
tm_fill("Terr_Name")
#plot the country with points for health facilities
tm_shape(country) +
tm_fill("Terr_Name")+
tm_shape(health_facilities)+
tm_dots(size = 0.2, col = "type", title = "Health facilities")
#plot the country with a layer for road networks
tm_shape(country) +
tm_fill("Terr_Name")+
tm_shape(road_network)+
tm_lines(size = 0.5)
#plot the country with a layer for the states
tm_shape(states) +
tm_fill("statename")+
tm_layout(legend.show = TRUE)
tm_shape(states) +
tm_polygons() +
tm_dots(size = 0.5, col = "pink") +
tm_text("statename", col = "purple", size = 0.75)
tm_shape(states) +
tm_polygons()  +
tm_shape(health_facilities) +
tm_dots(size = 0.01)
mymap <- tm_shape(states) + tm_polygons()
mymap + tm_dots(size = 0.75, col="pink") +  tm_text("statename", col = "purple")
# Create three maps
m1 <- tm_shape(country) + tm_polygons()
m2 <- tm_shape(states) + tm_polygons()
m3 <- tm_shape(health_facilities) + tm_dots()
# Arrange them in one image
tmap_arrange(m1, m2, m3, nrow = 1)
tmap_mode("view")
#plot the states
tm_shape(states)+
tm_borders(col='orange', lwd=5)+
tm_shape(states)+
tm_borders()+
tm_basemap('OpenStreetMap')
#plot healthcare facilities in each state interactively
tm_shape(health_facilities)+
tm_dots(col='type', size=0.1)+
tm_basemap('OpenStreetMap')+
tm_shape(states)+
tm_borders(lwd=1)
#plot road interactively
tm_shape(road_network)+
tm_lines(size = 0.5)+
tm_basemap('OpenStreetMap')+
tm_shape(states)+
tm_borders(lwd=1)
#set tmap mode back to plot for static plots
tmap_mode("plot")
#visualize population distribution by state
tm_shape(pop_states)+
tm_polygons(col='total', lwd=5)+
tm_shape(states)+
tm_borders()+
tm_basemap('OpenStreetMap')
#
health_facilities_Abuja %>%
group_by(type) %>%
summarise(count= n()) %>%
ggplot(aes(x = type, y = count)) +
geom_bar(stat = "identity") +
geom_text(aes(label = count), vjust = -0.5, size = 4) +
xlab("Type of Health Facility") +
ylab("Number") +
ggtitle("Number of Health Facilities in Abuja")+
scale_fill_brewer(type = "qual", palette = "Greens")
drive_path <- "/Users/laynacharliedennett/Desktop/worldpop/Module3/Data/"
#load the sf package
library(sf)
#read in the vector data
health_facilities <- st_read(paste0(
drive_path, "GRID3_Nigeria_-_Health_Care_Facilities.shp"))
road_network <- st_read(paste0(drive_path, "nga_rds_1m_dcw.shp"))
states <- st_read(paste0(drive_path, "Admin2_states.shp"))
country <- st_read(paste0(drive_path, "nga_polbnda_adm0_1m.shp"))
#load the raster package
library(raster)
#read in the raster data
pop_raster <- raster(paste0(drive_path, "NGA_population_v1_2_gridded.tif"))
library(terra)
library(tmap)
library(leaflet)
library(mapview)
library(units)
library(exactextractr)
library(tidyverse)
tmap_options(check.and.fix = TRUE) #fix potential issues during the processing
plot(states)
#plot just the shape area attribute
plot(states['region'], main = "region",
pal = rev(heat.colors(10)))
plot(pop_raster)
st_geometry(states) %>% plot()
plot(st_geometry(states))
plot(st_geometry(country))
plot(st_geometry(states), add = TRUE,
pch = 16, col = "#004C92", cex = 0.5)
plot(pop_raster)
plot(st_geometry(states), add = TRUE,
pch = 16, cex = 0.5)
#plot the country shapefile
tm_shape(country) +
tm_fill("Terr_Name")
#plot the country with points for health facilities
tm_shape(country) +
tm_fill("Terr_Name")+
tm_shape(health_facilities)+
tm_dots(size = 0.2, col = "type", title = "Health facilities")
#plot the country with a layer for road networks
tm_shape(country) +
tm_fill("Terr_Name")+
tm_shape(road_network)+
tm_lines(size = 0.5)
#plot the country with a layer for the states
tm_shape(states) +
tm_fill("statename")+
tm_layout(legend.show = TRUE)
tm_shape(states) +
tm_polygons() +
tm_dots(size = 0.5, col = "pink") +
tm_text("statename", col = "purple", size = 0.75)
tm_shape(states) +
tm_polygons()  +
tm_shape(health_facilities) +
tm_dots(size = 0.01)
mymap <- tm_shape(states) + tm_polygons()
mymap + tm_dots(size = 0.75, col="pink") +  tm_text("statename", col = "purple")
# Create three maps
m1 <- tm_shape(country) + tm_polygons()
m2 <- tm_shape(states) + tm_polygons()
m3 <- tm_shape(health_facilities) + tm_dots()
# Arrange them in one image
tmap_arrange(m1, m2, m3, nrow = 1)
tmap_mode("view")
#plot the states
tm_shape(states)+
tm_borders(col='orange', lwd=5)+
tm_shape(states)+
tm_borders()+
tm_basemap('OpenStreetMap')
#plot healthcare facilities in each state interactively
tm_shape(health_facilities)+
tm_dots(col='type', size=0.1)+
tm_basemap('OpenStreetMap')+
tm_shape(states)+
tm_borders(lwd=1)
#plot road interactively
tm_shape(road_network)+
tm_lines(size = 0.5)+
tm_basemap('OpenStreetMap')+
tm_shape(states)+
tm_borders(lwd=1)
#import the population dataset
pop_estimate <- read.csv(paste0(drive_path, "Population.csv"))
#view the population size estimates
view(pop_estimate)
#view the attributes of the states vector data
view(states)
#join the states vector data and the population estimates tabular data together
pop_states <- states %>%
inner_join(pop_estimate, by = "statename")
#set tmap mode back to plot for static plots
tmap_mode("plot")
#visualize population distribution by state
tm_shape(pop_states)+
tm_polygons(col='total', lwd=5)+
tm_shape(states)+
tm_borders()+
tm_basemap('OpenStreetMap')
#vector layer using a simple query
pop_kano <- pop_states %>%
filter(statename=='Kano') # extracting Kano states
qtm(pop_kano)
r_clipped <- crop(pop_raster, pop_kano)
tm_shape(r_clipped)+
tm_raster(title="Population")+
tm_shape(pop_kano)+
tm_basemap('OpenStreetMap')+
tm_borders(lwd=4)
#subset population
state_5million <- pop_states %>%
filter(total > 5000000)
#give names of states that have over 5 million people
state_5million$statename
#plot the states with a population of over 5 million people
tm_shape(state_5million)+
tm_polygons(col = "total", title = "Population")+
tm_basemap('OpenStreetMap')+
tm_borders(lwd=4)
#
health_facilities_Abuja %>%
group_by(type) %>%
summarise(count= n()) %>%
ggplot(aes(x = type, y = count)) +
geom_bar(stat = "identity") +
geom_text(aes(label = count), vjust = -0.5, size = 4) +
xlab("Type of Health Facility") +
ylab("Number") +
ggtitle("Number of Health Facilities in Abuja")+
scale_fill_brewer(type = "qual", palette = "Greens")
#import local government area dataset
lga <- st_read(paste0(drive_path,"GRID3_Nigeria_-_Local_Government_Area_Boundaries.shp"))
```{r select abuja HF}
#filter to have only the Abuja LGA
Abuja_lga <- lga %>%
filter(lga_name_x == "Municipal Area Council")
#filter to select only the health facilities in the Abuja LGA
health_facilities_Abuja <- health_facilities %>%
filter(lga_name=='Municipal Area Council')
#the number of health facilities in Abuja is given by "n", in this case, n=226
tally(health_facilities_Abuja)
#
health_facilities_Abuja %>%
group_by(type) %>%
summarise(count= n()) %>%
ggplot(aes(x = type, y = count)) +
geom_bar(stat = "identity") +
geom_text(aes(label = count), vjust = -0.5, size = 4) +
xlab("Type of Health Facility") +
ylab("Number") +
ggtitle("Number of Health Facilities in Abuja")+
scale_fill_brewer(type = "qual", palette = "Greens")
#Plot health facilities
tm_shape(health_facilities_Abuja)+
tm_dots(col='type', size=0.07, id='primary_na', popup.vars=c('category','functional','source'))+
tm_basemap('OpenStreetMap')+
tm_shape(Abuja_lga)+
tm_borders(lwd=4)
#Plot health facilities
tm_shape(health_facilities_Abuja)+
tm_dots(col='type', size=0.07, id='primary_na', popup.vars=c('category','functional','source'))+
tm_basemap('OpenStreetMap')+
tm_shape(Abuja_lga)+
tm_borders(lwd=4)
#Plot health facilities
tm_shape(health_facilities_Abuja)+
tm_dots(col='Type', size=0.07, id='primary_na', popup.vars=c('category','functional','source'))+
tm_basemap('OpenStreetMap')+
tm_shape(Abuja_lga)+
tm_borders(lwd=4)
#Plot health facilities
tm_shape(health_facilities_Abuja)+
tm_dots(col='type', size=0.07, id='primary_na', popup.vars=c('category','functional','source'))+
tm_basemap('OpenStreetMap')+
tm_shape(Abuja_lga)+
tm_borders(lwd=4)
table(health_facilities_Abuja$type)
table(health_facilities_Abuja$type)
pop_Abuja <- crop(pop_raster, Abuja_lga)
plot(pop_Abuja)
tm_shape(health_facilities_Abuja)+
tm_dots(col='type', size=0.07, id='primary_na', popup.vars=c('category','functional','source'))+
tm_basemap('OpenStreetMap')+
tm_shape(pop_Abuja)+
tm_raster()+
tm_shape(Abuja_lga)+
tm_borders(lwd=4)
#subset the raster data for the Abuja region
pop_Abuja <- crop(pop_raster, Abuja_lga)
#plot the cropped raster
plot(pop_Abuja)
tm_shape(health_facilities_Abuja)+
tm_dots(col='type', size=0.07, id='primary_na', popup.vars=c('category','functional','source'))+
tm_basemap('OpenStreetMap')+
tm_shape(pop_Abuja)+
tm_raster()+
tm_shape(Abuja_lga)+
tm_borders(lwd=4)
#subset the raster data for the Abuja region
pop_Abuja <- crop(pop_raster, Abuja_lga)
#plot the cropped raster
plot(pop_Abuja)
#map the health facilities with the cropped raster data on the same plot
tm_shape(health_facilities_Abuja)+
tm_dots(col='type', size=0.07, id='primary_na', popup.vars=c('category','functional','source'))+
tm_basemap('OpenStreetMap')+
tm_shape(pop_Abuja)+
tm_raster()+
tm_shape(Abuja_lga)+
tm_borders(lwd=4)
health_facilities_Abuja_buffered <- st_buffer(health_facilities_Abuja, dist=set_units(1, km))
tm_shape(pop_Abuja)+
tm_raster()+
tm_shape(health_facilities_Abuja_buffered)+
tm_borders()+
tm_shape(health_facilities_Abuja)+
tm_dots( size=0.08, id='primary_na')+
tm_shape(Abuja_lga)+
knitr::opts_chunk$set(echo = TRUE)
setwd(/Volumes/worldpop/Projects/WP000008_UNFPA_THA_Phase2/Working/Pop_Modelling_Training_Manual/Module1/images/)
setwd("/Volumes/worldpop/Projects/WP000008_UNFPA_THA_Phase2/Working/Pop_Modelling_Training_Manual/Module1/images/")
setwd("/Volumes/worldpop/Projects/WP000008_UNFPA_THA_Phase2/Working/Pop_Modelling_Training_Manual/Module1/images")
knitr::opts_chunk$set(echo = TRUE)
